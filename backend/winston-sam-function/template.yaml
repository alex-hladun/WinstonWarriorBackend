AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  winston-sam-function

  Sample SAM Template for winston-sam-function

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Runtime: nodejs12.x

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Layers:
        - !Ref DependencyLayer
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get
    Policies: -AmazonDynamoDBFullAccess
  GetRoundsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-rounds/
      Handler: app.lambdaHandler
      Layers:
        - !Ref DependencyLayer
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /rounds
            Method: get
    Policies: -AmazonDynamoDBFullAccess
  PostContentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: post-content/
      Handler: app.lambdaHandler
      Layers:
        - !Ref DependencyLayer
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /rounds
            Method: post
    Policies: -AmazonDynamoDBFullAccess
  PutContentFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: put-content/
      Handler: app.lambdaHandler
      Layers:
        - !Ref DependencyLayer
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /rounds
            Method: put
    Policies: -AmazonDynamoDBFullAccess
  GetUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get-users/
      Handler: app.lambdaHandler
      Layers:
        - !Ref DependencyLayer
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /users
            Method: get
    Policies: -AmazonDynamoDBFullAccess
  FollowUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: put-users/
      Handler: app.lambdaHandler
      Layers:
        - !Ref DependencyLayer
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /users
            Method: put
    Policies: -AmazonDynamoDBFullAccess
  ReactFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: put-reaction/
      Handler: app.lambdaHandler
      Layers:
        - !Ref DependencyLayer
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /put-reaction
            Method: put
    Policies: -AmazonDynamoDBFullAccess
  DependencyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: sam-app-dependencies
      Description: Node dependencies for the app.
      ContentUri: dependencies/.
      CompatibleRuntimes:
        - nodejs12.x
      LicenseInfo: "MIT"
      RetentionPolicy: Retain

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
  GetRoundsApi:
    Description: "API Gateway endpoint URL for Prod stage for Get Rounds function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/rounds/"
  GetRoundsFunction:
    Description: "GetRoundsFunction Lambda Function ARN"
    Value: !GetAtt GetRoundsFunction.Arn
  GetRoundsFunctionIamRole:
    Description: "Implicit IAM Role created for GetRoundsFunction"
    Value: !GetAtt GetRoundsFunctionRole.Arn
  PostContentApi:
    Description: "API Gateway endpoint URL for Prod stage for PostContent upfunction"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/rounds/"
  PostContentFunction:
    Description: "PostContentFunction Lambda Function ARN"
    Value: !GetAtt PostContentFunction.Arn
  PostContentFunctionIamRole:
    Description: "Implicit IAM Role created for PostContentFunction"
    Value: !GetAtt PostContentFunctionRole.Arn
  PutContentFunction:
    Description: "PutContentFunction Lambda Function ARN"
    Value: !GetAtt PutContentFunction.Arn
  PutContentFunctionIamRole:
    Description: "Implicit IAM Role created for PostContentFunction"
    Value: !GetAtt PutContentFunctionRole.Arn
  GetUsersFunction:
    Description: "GetUsersFunction Lambda Function ARN"
    Value: !GetAtt GetUsersFunction.Arn
  GetUsersFunctionIamRole:
    Description: "Implicit IAM Role created for PostContentFunction"
    Value: !GetAtt GetUsersFunctionRole.Arn
  PutUsersFunction:
    Description: "PutUsersFunction Lambda Function ARN"
    Value: !GetAtt PutUsersFunction.Arn
  PutUsersFunctionIamRole:
    Description: "Implicit IAM Role created for PostContentFunction"
    Value: !GetAtt PutUsersFunctionRole.Arn
  ReactFunction:
    Description: "ReactFunction Lambda Function ARN"
    Value: !GetAtt ReactFunction.Arn
  ReactFunctionIamRole:
    Description: "Implicit IAM Role created for PostContentFunction"
    Value: !GetAtt ReactFunctionRole.Arn
